{"version":3,"sources":["components/ExpenseSection/ExpensesFilter.js","components/ExpenseSection/ExpenseDate.js","components/ExpenseSection/ExpenseItem.js","components/ExpenseSection/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpenseSection/ExpensesChart.js","components/ExpenseSection/Expenses.js","components/NewExpenses/ExpensesForm/ExpensesForm.js","components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selectedYear","onChange","filterhandler","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","onClick","console","log","ExpensesList","filteredExpenses","length","map","ele","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","expenseMonth","getMonth","Expenses","useState","setSelectedYear","list","filter","getYear","Number","e","pickedYear","target","ExpensesForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","formOn","setFormOn","cancelHandler","onSubmit","preventDefault","expenseData","Date","saveExpenseData","type","input","min","step","NewExpenses","data","dataCopy","random","toString","INITIALexpenses","App","thisDataYear","setDataYear","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.300c0c9d.chunk.js","sourcesContent":["import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n  return (\n    \n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selectedYear} onChange={props.filterhandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css';\n\nfunction ExpenseDate(props) {\n\n\n    let month = props.date.toLocaleString('en-US', {month: 'long'});\n    let day = props.date.toLocaleString('en-US', {day: '2-digit'});\n    let year = props.date.getFullYear();\n\n\n    return(\n        <div className=\"expense-date\"> \n          \n        <div className=\"expense-date__month\">{month}</div>\n        <div className=\"expense-date__day\">{day}</div>\n        <div className=\"expense-date__year\">{year}</div>\n    \n    \n    </div>\n    )\n\n}\n\nexport default ExpenseDate;","import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport React from \"react\";\n\n\n// eslint-disable-next-line no-lone-blocks\n{/* Prop passed from Parent Expenses */}\nfunction ExpenseItem(props) {\n\nconst clickHandler = () => {\n  console.log(\"hi\")\n}\n\n\n  return (\n\n    <li>\n    <div className=\"expense-item\">\n\n<ExpenseDate date={props.date} title={props.title} amount={props.amount}/>\n\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">{props.amount}</div>\n      </div>\n\n\n<button onClick={clickHandler}>Change Title</button>\n\n    </div>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport \"./ExpensesList.css\";\n\nimport ExpenseItem from \"./ExpenseItem\";\n\n/* NEW KNOWLEDGE\nShortened ternary expression form: \nSome condition && desired return value if condition is met.\n\nWhen there is no expenses for a chosen filtered year, return \"no expenses found\" EXAMPLE:\n{filteredExpenses.length === 0 && <p> NO EXPENSES FOUND. </p>}\n*/\n\nconst ExpensesList = (props) => {\n  /* NEW KNOWLEDGE: jsx html can be stored in variables\n  \n  example:   \n  let expensesContent = <p>No Expenses found.</p>;*/\n\n  if (props.filteredExpenses.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.filteredExpenses.map((ele) => (\n        <ExpenseItem\n          key={ele.id}\n          date={ele.date}\n          title={ele.title}\n          amount={ele.amount}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\nimport React from \"react\";\n\n//props are from Chart.js\nconst ChartBar = (props) => {\n\n\nlet barFillHeight = '0%';\n\nif (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\"\n}\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport React from 'react';\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = props => {\n\n    //change array of objects to an array of numbers. \n    //Take each datapoint and only use the object's value\nconst dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\nconst totalMaximum = Math.max(...dataPointValues);\n\nreturn <div className=\"chart\">\n{props.dataPoints.map(dataPoint => \n\n<ChartBar \nvalue={dataPoint.value} \nmaxValue={totalMaximum} \nlabel={dataPoint.label} \nkey={dataPoint.label}/>)}\n\n</div>\n}\n\nexport default Chart;","import React from 'react';\nimport Chart from '../Chart/Chart';\n\n\nconst ExpensesChart = props => {\nconst chartDataPoints = [\n{label: 'Jan', value: 0},\n{label: 'Feb', value: 0},\n{label: 'Mar', value: 0},\n{label: 'Apr', value: 0},\n{label: 'May', value: 0},\n{label: 'Jun', value: 0},\n{label: 'Jul', value: 0},\n{label: 'Aug', value: 0},\n{label: 'Sep', value: 0},\n{label: 'Oct', value: 0},\n{label: 'Nov', value: 0},\n{label: 'Dec', value: 0},\n];\n\n//for each expense (object) of the array of filtered expenses (objects)\nfor (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); //starting at 0 ==> jan is 0\n    console.log(expenseMonth)\nchartDataPoints[expenseMonth].value += expense.amount;\n\n}\n\n    return <Chart dataPoints={chartDataPoints}/>\n}\n\nexport default ExpensesChart;","import \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport React, { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\n/*Props passed from app.js */\nfunction Expenses(props) {\n  //selected year in the filter dropdown\n  const [selectedYear, setSelectedYear] = useState(2020);\n\n  //filtered list.\n  const filteredExpenses = props.list.filter(\n    (ele) => ele.date.getYear() + 1900 === Number(selectedYear)\n  );\n\n  function filterHandler(e) {\n    let pickedYear = e.target.value;\n    setSelectedYear(pickedYear);\n  }\n\n\n\n  return (\n    <div className=\"expenses\">\n      <ExpensesFilter\n        year={props.year}\n        selectedYear={props.selectedYear}\n        filterhandler={filterHandler}\n      />\n\n<ExpensesChart expenses={filteredExpenses}/>\n\n   <ExpensesList filteredExpenses={filteredExpenses}/>\n\n    </div>\n  );\n}\n\nexport default Expenses;\n","import \"./ExpensesForm.css\";\nimport React, {useState} from \"react\";\n\n\nfunction ExpensesForm(props) {\n\nconst [enteredTitle, setEnteredTitle] = useState('');\nconst [enteredAmount, setEnteredAmount] = useState('');\nconst [enteredDate, setEnteredDate] = useState('');\nconst [formOn, setFormOn] = useState(false);\n\nconst titleHandler = (e) => {\n    let input = e.target.value;\n    setEnteredTitle(input);\n}        \n\nconst amountHandler = (e) => {\n    let input = e.target.value;\n    setEnteredAmount(input);\n}        \n\nconst dateHandler = (e) => {\n    let input = e.target.value;\n    setEnteredDate(input);\n}        \n\nconst submitHandler = (e) => {\ne.preventDefault();\n\n//Gather all form data info into an object\nconst expenseData = {\n    title: enteredTitle,\n    amount: \n    +enteredAmount,\n    /*Parse the entered date string into a date object. */\n    date: new Date(enteredDate + \" 00:00\")\n}\n\n\n//Send data to parent component NewExpenses.js\nprops.saveExpenseData(expenseData)\n\n\n//reset the form\nsetEnteredTitle('');\nsetEnteredAmount('');\nsetEnteredDate('');\n}\n\n//When cancel button clicked, toggle form\nconst cancelHandler = () => {\nsetFormOn(!formOn)\n}\n\nif (formOn === false) {\nreturn <button onClick={cancelHandler}>Add Expense</button>\n}\n\n  return (\n\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input value={enteredTitle} type=\"text\" onChange={titleHandler}/>\n        </div>\n      </div>\n\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input value={enteredAmount} type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountHandler}/>\n        </div>\n      </div>\n\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input value={enteredDate} type=\"date\" min=\"2021-01-01\" max=\"2024-01-01\" onChange={dateHandler}/>\n        </div>\n      </div>\n\n<div className=\"new-expense__actions\">\n<button type=\"submit\">Add Expense</button>\n<button onClick={cancelHandler}>Cancel</button>\n\n\n</div>\n\n    </form>\n  );\n}\n\nexport default ExpensesForm;\n","import './NewExpenses.css';\nimport ExpensesForm from './ExpensesForm/ExpensesForm';\n\nfunction NewExpenses(props) {\n\n\n//function to send to child component (ExpensesForm.js)\nconst fetchExpenseData = (data) => {\n\n    let dataCopy = {\n        ...data,\n        id: Math.random().toString()\n    }\n\n//send data up to parent (app.js)\n    props.saveExpenseData(dataCopy)\n\n}\n\n\nreturn (\n\n<div className=\"new-expense\">\n\n<ExpensesForm saveExpenseData={fetchExpenseData}/>\n\n</div>\n\n)\n\n\n\n}\n\nexport default NewExpenses","import Expenses from \"./components/ExpenseSection/Expenses\";\nimport NewExpenses from \"./components/NewExpenses/NewExpenses\";\nimport React, { useState } from \"react\";\n\n\nconst INITIALexpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\n\nfunction App() {\n  const [thisDataYear, setDataYear] = useState(null);\n\n\n  const [expenses, setExpenses] = useState(INITIALexpenses);\n\n  const fetchExpenseData = (data) => {\n    let dataCopy = {\n      ...data,\n      id: Math.random().toString(),\n    };\n\n\n\n    //add new expense to existing expenses\n  \nsetExpenses(prevExpenses => {return [dataCopy, ...prevExpenses]});\n\n  \n    //get date object\n    let date = dataCopy.date;\n\n    //year is of type number\n    let year = date.getFullYear();\n\n    setDataYear(year);\n  };\n\n\n\n\n\n  \n\n\n\n  return (\n    <div>\n      <NewExpenses saveExpenseData={fetchExpenseData} />\n      <Expenses year={thisDataYear} list={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}