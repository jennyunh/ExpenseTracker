{"ast":null,"code":"var _jsxFileName = \"/Users/jennyhwang/Downloads/01-starting-setup/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Expenses from \"./components/ExpenseSection/Expenses\";\nimport NewExpenses from \"./components/NewExpenses/NewExpenses\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIALexpenses = [{\n  id: \"e1\",\n  title: \"Toilet Paper\",\n  amount: 94.12,\n  date: new Date(2020, 7, 14)\n}, {\n  id: \"e2\",\n  title: \"New TV\",\n  amount: 799.49,\n  date: new Date(2021, 2, 12)\n}, {\n  id: \"e3\",\n  title: \"Car Insurance\",\n  amount: 294.67,\n  date: new Date(2021, 2, 28)\n}, {\n  id: \"e4\",\n  title: \"New Desk (Wooden)\",\n  amount: 450,\n  date: new Date(2021, 5, 12)\n}];\n\nfunction App() {\n  _s();\n\n  const [thisData, setData] = useState(null);\n  const [thisDataYear, setDataYear] = useState(null);\n  const [expenses, setExpenses] = useState(INITIALexpenses);\n\n  const fetchExpenseData = data => {\n    let dataCopy = { ...data,\n      id: Math.random().toString()\n    };\n    console.log(\"data in app.js is \");\n    console.log(dataCopy);\n    setData(dataCopy);\n    console.log(\"expenses is \");\n    console.log([thisData, ...expenses]); //get date object\n\n    let date = dataCopy.date; //year is of type number\n\n    let year = date.getFullYear();\n    setDataYear(year);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpenses, {\n      saveExpenseData: fetchExpenseData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      transferData: thisData,\n      year: thisDataYear,\n      list: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SBXD36QBspdHBNcZuBxg7rOsKdE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jennyhwang/Downloads/01-starting-setup/src/App.js"],"names":["Expenses","NewExpenses","React","useState","INITIALexpenses","id","title","amount","date","Date","App","thisData","setData","thisDataYear","setDataYear","expenses","setExpenses","fetchExpenseData","data","dataCopy","Math","random","toString","console","log","year","getFullYear"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,sCAArB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,MAAM,EAAE,KAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CADsB,EAOtB;AAAEJ,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAE,QAAnB;AAA6BC,EAAAA,MAAM,EAAE,MAArC;AAA6CC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAAnD,CAPsB,EAQtB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,MAAM,EAAE,MAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CARsB,EActB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,mBAFT;AAGEC,EAAAA,MAAM,EAAE,GAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAdsB,CAAxB;;AAwBA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAM,CAACU,YAAD,EAAeC,WAAf,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACC,eAAD,CAAxC;;AAGA,QAAMa,gBAAgB,GAAIC,IAAD,IAAU;AACjC,QAAIC,QAAQ,GAAG,EACb,GAAGD,IADU;AAEbb,MAAAA,EAAE,EAAEe,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFS,KAAf;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAP,IAAAA,OAAO,CAACO,QAAD,CAAP;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACb,QAAD,EAAW,GAAGI,QAAd,CAAZ,EAbiC,CAejC;;AACA,QAAIP,IAAI,GAAGW,QAAQ,CAACX,IAApB,CAhBiC,CAkBjC;;AACA,QAAIiB,IAAI,GAAGjB,IAAI,CAACkB,WAAL,EAAX;AAEAZ,IAAAA,WAAW,CAACW,IAAD,CAAX;AACD,GAtBD;;AA2BA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,eAAe,EAAER;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,YAAY,EAAEN,QAAxB;AAAkC,MAAA,IAAI,EAAEE,YAAxC;AAAsD,MAAA,IAAI,EAAEE;AAA5D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAzCQL,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import Expenses from \"./components/ExpenseSection/Expenses\";\nimport NewExpenses from \"./components/NewExpenses/NewExpenses\";\nimport React, { useState } from \"react\";\n\n\nconst INITIALexpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\n\nfunction App() {\n  const [thisData, setData] = useState(null);\n\n  const [thisDataYear, setDataYear] = useState(null);\n\n  const [expenses, setExpenses] = useState(INITIALexpenses);\n\n\n  const fetchExpenseData = (data) => {\n    let dataCopy = {\n      ...data,\n      id: Math.random().toString(),\n    };\n\n    console.log(\"data in app.js is \")\n    console.log(dataCopy)\n    setData(dataCopy);\n\n\n\n    console.log(\"expenses is \")\n    console.log([thisData, ...expenses])\n\n    //get date object\n    let date = dataCopy.date;\n\n    //year is of type number\n    let year = date.getFullYear();\n\n    setDataYear(year);\n  };\n\n\n\n\n  return (\n    <div>\n      <NewExpenses saveExpenseData={fetchExpenseData} />\n      <Expenses transferData={thisData} year={thisDataYear} list={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}