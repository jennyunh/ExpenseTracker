{"ast":null,"code":"var _jsxFileName = \"/Users/jennyhwang/Downloads/01-starting-setup/src/components/ExpenseSection/ExpensesList.js\";\nimport React from \"react\";\nimport './ExpensesList.css';\nimport ExpenseItem from \"./ExpenseItem\";\n/* NEW KNOWLEDGE\nShortened ternary expression form: \nSome condition && desired return value if condition is met.\n\nWhen there is no expenses for a chosen filtered year, return \"no expenses found\" EXAMPLE:\n{filteredExpenses.length === 0 && <p> NO EXPENSES FOUND. </p>}\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesList = props => {\n  /* NEW KNOWLEDGE: jsx html can be stored in variables\n  \n  example:   \n  let expensesContent = <p>No Expenses found.</p>;*/\n  if (props.filteredExpenses.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"expenses-list__fallback\",\n      children: \"Found no expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (props.filteredExpenses.length > 0) {\n    expensesContent = props.filteredExpenses.map(ele => {\n      return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        date: ele.date,\n        title: ele.title,\n        amount: ele.amount\n      }, ele.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    });\n  }\n};\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"sources":["/Users/jennyhwang/Downloads/01-starting-setup/src/components/ExpenseSection/ExpensesList.js"],"names":["React","ExpenseItem","ExpensesList","props","filteredExpenses","length","expensesContent","map","ele","date","title","amount","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,oBAAP;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE9B;AACF;AACA;AACA;AAGE,MAAIA,KAAK,CAACC,gBAAN,CAAuBC,MAAvB,KAAkC,CAAtC,EAAyC;AACrC,wBAAO;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIF,KAAK,CAACC,gBAAN,CAAuBC,MAAvB,GAAgC,CAApC,EAAuC;AACrCC,IAAAA,eAAe,GAAGH,KAAK,CAACC,gBAAN,CAAuBG,GAAvB,CAA4BC,GAAD,IAAS;AACpD,0BACE,QAAC,WAAD;AAEE,QAAA,IAAI,EAAEA,GAAG,CAACC,IAFZ;AAGE,QAAA,KAAK,EAAED,GAAG,CAACE,KAHb;AAIE,QAAA,MAAM,EAAEF,GAAG,CAACG;AAJd,SACOH,GAAG,CAACI,EADX;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATiB,CAAlB;AAUD;AAIF,CA3BD;;KAAMV,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\n\nimport './ExpensesList.css';\n\nimport ExpenseItem from \"./ExpenseItem\";\n\n/* NEW KNOWLEDGE\nShortened ternary expression form: \nSome condition && desired return value if condition is met.\n\nWhen there is no expenses for a chosen filtered year, return \"no expenses found\" EXAMPLE:\n{filteredExpenses.length === 0 && <p> NO EXPENSES FOUND. </p>}\n*/\n\nconst ExpensesList = (props) => {\n\n  /* NEW KNOWLEDGE: jsx html can be stored in variables\n  \n  example:   \n  let expensesContent = <p>No Expenses found.</p>;*/\n\n\n  if (props.filteredExpenses.length === 0) {\n      return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>\n  }\n\n  if (props.filteredExpenses.length > 0) {\n    expensesContent = props.filteredExpenses.map((ele) => {\n      return (\n        <ExpenseItem\n          key={ele.id}\n          date={ele.date}\n          title={ele.title}\n          amount={ele.amount}\n        />\n      );\n    });\n  }\n\n\n\n};\n\nexport default ExpensesList;\n"]},"metadata":{},"sourceType":"module"}