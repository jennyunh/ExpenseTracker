{"ast":null,"code":"var _jsxFileName = \"/Users/jennyhwang/Downloads/01-starting-setup/src/components/ExpenseSection/ExpensesList.js\";\nimport React from \"react\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n/* NEW KNOWLEDGE\nShortened ternary expression form: \nSome condition && desired return value if condition is met.\n\nWhen there is no expenses for a chosen filtered year, return \"no expenses found\" EXAMPLE:\n{filteredExpenses.length === 0 && <p> NO EXPENSES FOUND. </p>}\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesList = props => {\n  /* NEW KNOWLEDGE: jsx html can be stored in variables\n  \n  example:   \n  let expensesContent = <p>No Expenses found.</p>;*/\n  if (props.filteredExpenses.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"expenses-list__fallback\",\n      children: \"Found no expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"expenses-list\",\n    children: props.filteredExpenses.map(ele => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      date: ele.date,\n      title: ele.title,\n      amount: ele.amount\n    }, ele.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"sources":["/Users/jennyhwang/Downloads/01-starting-setup/src/components/ExpenseSection/ExpensesList.js"],"names":["React","ExpenseItem","ExpensesList","props","filteredExpenses","length","map","ele","date","title","amount","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,oBAAP;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B;AACF;AACA;AACA;AAEE,MAAIA,KAAK,CAACC,gBAAN,CAAuBC,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,wBAAO;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA,cACGF,KAAK,CAACC,gBAAN,CAAuBE,GAAvB,CAA4BC,GAAD,iBAC1B,QAAC,WAAD;AAEE,MAAA,IAAI,EAAEA,GAAG,CAACC,IAFZ;AAGE,MAAA,KAAK,EAAED,GAAG,CAACE,KAHb;AAIE,MAAA,MAAM,EAAEF,GAAG,CAACG;AAJd,OACOH,GAAG,CAACI,EADX;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtBD;;KAAMT,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\n\nimport \"./ExpensesList.css\";\n\nimport ExpenseItem from \"./ExpenseItem\";\n\n/* NEW KNOWLEDGE\nShortened ternary expression form: \nSome condition && desired return value if condition is met.\n\nWhen there is no expenses for a chosen filtered year, return \"no expenses found\" EXAMPLE:\n{filteredExpenses.length === 0 && <p> NO EXPENSES FOUND. </p>}\n*/\n\nconst ExpensesList = (props) => {\n  /* NEW KNOWLEDGE: jsx html can be stored in variables\n  \n  example:   \n  let expensesContent = <p>No Expenses found.</p>;*/\n\n  if (props.filteredExpenses.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.filteredExpenses.map((ele) => (\n        <ExpenseItem\n          key={ele.id}\n          date={ele.date}\n          title={ele.title}\n          amount={ele.amount}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n"]},"metadata":{},"sourceType":"module"}